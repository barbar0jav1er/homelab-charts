1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- if .Values.ingress.tls.enabled }}
  https://{{ .Values.ingress.host }}
{{- else }}
  http://{{ .Values.ingress.host }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "prowlarr.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "prowlarr.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "prowlarr.fullname" . }} --template "{{ "{{" }} range (index .status.loadBalancer.ingress 0) {{ "}}" }}{{ "{{" }}.{{ "}}" }}{{ "{{" }} end {{ "}}" }}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "prowlarr.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:9696 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 9696:$CONTAINER_PORT
{{- end }}

2. Complete the Prowlarr setup:
   - Navigate to the web interface using the URL above
   - Complete the initial setup wizard
   - Add your indexers (torrent trackers and usenet indexers)
   - Configure your arr applications (Sonarr, Radarr, etc.)

3. Integration with other *arr applications:
   - Prowlarr acts as a centralized indexer manager
   - Add your Sonarr, Radarr, Lidarr instances in Prowlarr settings
   - Indexers will be automatically synced to all connected applications
   - No need to configure indexers separately in each *arr app

4. Important Notes:
   - Prowlarr is the "brain" of your *arr setup for indexer management
   - Configure authentication if exposing externally
   - Monitor logs for indexer health and performance
   - Keep indexers updated and remove broken ones

5. Next steps:
   - Install Sonarr for TV series management
   - Install Radarr for movie management  
   - Install qBittorrent as download client
   - Connect all applications through Prowlarr

For more information visit: https://wiki.servarr.com/prowlarr