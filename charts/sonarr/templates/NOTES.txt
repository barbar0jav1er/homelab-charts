1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- if .Values.ingress.tls.enabled }}
  https://{{ .Values.ingress.host }}
{{- else }}
  http://{{ .Values.ingress.host }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "sonarr.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "sonarr.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "sonarr.fullname" . }} --template "{{ "{{" }} range (index .status.loadBalancer.ingress 0) {{ "}}" }}{{ "{{" }}.{{ "}}" }}{{ "{{" }} end {{ "}}" }}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "sonarr.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8989 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8989:$CONTAINER_PORT
{{- end }}

2. Complete the Sonarr setup:
   - Navigate to the web interface using the URL above
   - Complete the initial setup wizard
   - Configure your download clients (qBittorrent, Transmission, etc.)
   - Add your TV series indexers and quality profiles

{{- if .Values.persistence.media.enabled }}

3. Your media volume is mounted at: /media
   Configure the subPath in values.yaml to organize your content:
   persistence:
     media:
       enabled: true
       subPath: ""  # e.g., "tv" for TV shows
{{- else }}

3. Note: Media volume is not enabled
   Enable it in values.yaml to access your media files:
   persistence:
     media:
       enabled: true
       size: 100Gi
       existingClaim: "your-media-pvc"
{{- end }}

For more information visit: https://wiki.servarr.com/sonarr